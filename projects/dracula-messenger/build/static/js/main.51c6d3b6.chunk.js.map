{"version":3,"sources":["components/Header/Header.js","components/LeftSidebar/LeftSidebar.js","components/Messages/Messages.js","components/PrivateMessages/PrivateMessages.js","containers/Chat/Chat.js","containers/Messenger/Messenger.js","App.js","serviceWorker.js","index.js"],"names":["useStyles","makeStyles","theme","appBar","zIndex","drawer","background","deepPurple","logoBox","display","alignItems","logo","marginRight","topAvatar","width","height","marginLeft","topAvatarImg","borderRadius","Header","props","classes","CssBaseline","AppBar","position","className","Toolbar","Typography","variant","noWrap","src","avatarUrl","alt","avatarName","title","drawerWidth","flexShrink","drawerPaper","drawerContainer","overflow","sharp","fontSize","navLink","color","textDecoration","active","LeftSidebar","data","channels","people","Drawer","paper","List","ListSubheader","component","id","map","channel","index","ListItem","button","key","name","to","url","ListItemText","primary","Divider","dense","userName","avatar","myProfile","ListItemAvatar","Avatar","Messages","countMessage","messages","activeChannel","list","userId","channelId","message","Fragment","Date","now","toString","secondary","secondaryHeading","PrivateMessages","activePrivateChat","content","flexGrow","padding","spacing","contentBox","paddingBottom","contentBody","sendMessageBox","borderTop","bottom","right","paddingLeft","sendMessage","marginBottom","typography","pxToRem","palette","text","paddingTop","withRouter","privateMessages","find","match","params","channelName","undefined","user","filter","length","countPrivateMessage","hasOwnProperty","TextField","fullWidth","label","type","value","inputText","onChange","inputTextChange","onKeyPress","event","addMessage","Messenger","state","addMessageHandler","chat","target","push","setState","inputTextChangeHandler","trim","this","chatProps","root","path","exact","Component","withStyles","borderColor","App","Boolean","window","location","hostname","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console"],"mappings":"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","file":"static/js/main.51c6d3b6.chunk.js","sourcesContent":["import React from 'react'\nimport { makeStyles } from '@material-ui/core/styles'\nimport AppBar from '@material-ui/core/AppBar'\nimport CssBaseline from '@material-ui/core/CssBaseline'\nimport Toolbar from '@material-ui/core/Toolbar'\nimport Typography from '@material-ui/core/Typography'\nimport FastfoodIcon from '@material-ui/icons/Fastfood'\nimport deepPurple from '@material-ui/core/colors/deepPurple'\n\n\nconst useStyles = makeStyles((theme) => ({\n  appBar: {\n    zIndex: theme.zIndex.drawer + 1,\n    background: deepPurple[700],\n  },\n  logoBox: {\n    display: 'flex',\n    alignItems: 'center',\n  },\n  logo: {\n    marginRight: '10px',\n  },\n  topAvatar: {\n    width: 40,\n    height: 40,\n    marginLeft: 'auto',\n    marginRight: 5,\n  },\n  topAvatarImg: {\n    width: '100%',\n    height: '100%',\n    borderRadius: '50%',\n  }\n}));\n\n\nconst Header = props => {\n  const classes = useStyles()\n\n  return (\n    <>\n      <CssBaseline />\n      <AppBar position=\"fixed\" className={classes.appBar}>\n        <Toolbar>\n          <Typography className={classes.logoBox} variant=\"h6\" noWrap>\n            <FastfoodIcon className={classes.logo} /> Dracula Messenger\n          </Typography>\n          <div className={classes.topAvatar}>\n            <img\n              className={classes.topAvatarImg}\n              src={props.avatarUrl}\n              alt={props.avatarName}\n              title={props.avatarName}\n            />\n          </div>\n        </Toolbar>\n      </AppBar>\n    </>\n  )\n}\n\nexport default Header","import React from 'react'\nimport {NavLink} from 'react-router-dom'\nimport { makeStyles } from '@material-ui/core/styles'\nimport Drawer from '@material-ui/core/Drawer'\nimport Divider from '@material-ui/core/Divider'\nimport ListSubheader from '@material-ui/core/ListSubheader'\nimport List from '@material-ui/core/List'\nimport ListItem from '@material-ui/core/ListItem'\nimport ListItemText from '@material-ui/core/ListItemText'\nimport Avatar from '@material-ui/core/Avatar'\nimport ListItemAvatar from '@material-ui/core/ListItemAvatar'\nimport Toolbar from '@material-ui/core/Toolbar'\n\n\nconst useStyles = makeStyles((theme) => ({\n  drawer: {\n    width: drawerWidth,\n    flexShrink: 0,\n  },\n  drawerPaper: {\n    width: drawerWidth,\n  },\n  drawerContainer: {\n    overflow: 'auto',\n  },\n  sharp: {\n    marginRight: 8,\n    fontSize: 16,\n  },\n  navLink: {\n    color: 'inherit',\n    textDecoration: 'none',\n  },\n  active: {\n    color: 'red',\n  }\n}));\n\nconst drawerWidth = 240\n\nconst LeftSidebar = props => {\n  const classes = useStyles()\n\n  const { channels, people } = props.data\n\n  return (\n    <Drawer\n      className={classes.drawer}\n      variant=\"permanent\"\n      classes={{\n        paper: classes.drawerPaper,\n      }}\n    >\n      <Toolbar />\n      <div className={classes.drawerContainer}>\n        <List>\n          <ListSubheader component=\"div\" id=\"nested-list-subheader\">\n            Channels\n          </ListSubheader>\n\n          {channels.map((channel, index) => (\n            <ListItem button key={channel.name}>\n              <div className={classes.sharp}>#</div>\n              <NavLink to={`/channel/${channel.url}`} className={classes.navLink}><ListItemText primary={channel.name} /></NavLink>\n            </ListItem>\n          ))}\n        </List>\n        <Divider />\n        <List dense>\n          <ListSubheader component=\"div\" id=\"nested-list-subheader\">\n            People\n          </ListSubheader>\n          {\n            people.map(({userName, name, avatar, myProfile}, index) => {\n              return (\n                !myProfile\n                ? <NavLink to={`/user/${userName}`} className={classes.navLink} key={name + index}>\n                    <ListItem button>\n                      <ListItemAvatar>\n                        <Avatar\n                          alt={name}\n                          src={avatar}\n                        />\n                      </ListItemAvatar>\n                      <ListItemText id={name} primary={name} />\n                    </ListItem>\n                  </NavLink>\n                : null\n              )\n            })\n          }\n        </List>\n      </div>\n    </Drawer>\n  )\n}\n\nexport default LeftSidebar","import React from 'react'\nimport List from '@material-ui/core/List'\nimport ListItem from '@material-ui/core/ListItem'\nimport ListItemText from '@material-ui/core/ListItemText'\nimport Avatar from '@material-ui/core/Avatar'\nimport ListItemAvatar from '@material-ui/core/ListItemAvatar'\nimport Typography from '@material-ui/core/Typography'\n\n\nconst Messages = props => {\n  const {classes, countMessage, messages, activeChannel, people} = props\n\n  return (\n    <List className={classes.list}>\n      {\n        countMessage > 0\n        ? messages.map(({ id, userId, channelId, message }) => (\n            activeChannel === channelId\n            ? <React.Fragment key={id + Date.now().toString()}>\n                <ListItem button>\n                  <ListItemAvatar>\n                    <Avatar alt={people[userId - 1].name} src={people[userId - 1].avatar} />\n                  </ListItemAvatar>\n                  <ListItemText primary={people[userId - 1].name} secondary={message} />\n                </ListItem>\n              </React.Fragment>\n            : null\n          ))\n        : <Typography className={classes.secondaryHeading}>В даному каналі нема повідомлень.</Typography>\n      }\n    </List>\n  )\n}\n\nexport default Messages","import React from 'react'\nimport List from '@material-ui/core/List'\nimport ListItem from '@material-ui/core/ListItem'\nimport ListItemText from '@material-ui/core/ListItemText'\nimport Avatar from '@material-ui/core/Avatar'\nimport ListItemAvatar from '@material-ui/core/ListItemAvatar'\nimport Typography from '@material-ui/core/Typography'\n\n\nconst PrivateMessages = props => {\n  const {classes, countMessage, messages, activePrivateChat, people} = props\n\n  return (\n    <List className={classes.list}>\n      {\n        countMessage > 0\n        ? messages.map(({ id, userId, channelId, message }) => (\n            activePrivateChat === channelId\n            ? <React.Fragment key={id + Date.now().toString()}>\n                <ListItem button>\n                  <ListItemAvatar>\n                    <Avatar alt={people[userId - 1].name} src={people[userId - 1].avatar} />\n                  </ListItemAvatar>\n                  <ListItemText primary={people[userId - 1].name} secondary={message} />\n                </ListItem>\n              </React.Fragment>\n            : null\n          ))\n        : <Typography className={classes.secondaryHeading}>В даному каналі нема повідомлень.</Typography>\n      }\n    </List>\n  )\n}\n\nexport default PrivateMessages","import React from 'react'\nimport {withRouter} from 'react-router-dom'\nimport { makeStyles } from '@material-ui/core/styles'\nimport Toolbar from '@material-ui/core/Toolbar'\nimport TextField from '@material-ui/core/TextField'\nimport Messages from '../../components/Messages/Messages'\nimport PrivateMessages from '../../components/PrivateMessages/PrivateMessages'\n\n\nconst useStyles = makeStyles((theme) => ({\n  content: {\n    flexGrow: 1,\n    padding: theme.spacing(3),\n    position: 'relative',\n  },\n  contentBox: {\n    paddingBottom: 40,\n  },\n  contentBody: {\n    \n  },\n  sendMessageBox: {\n    background: '#fafafa',\n    padding: '20px 0 10px 0',\n    borderTop: '1px solid #eee',\n    position: 'fixed',\n    bottom: 0, right: '15px',\n    width: 'calc(100% - 220px)',\n    paddingLeft: 50,\n  },\n  sendMessage: {\n    \n  },\n  list: {\n    marginBottom: theme.spacing(2),\n  },\n  secondaryHeading: {\n    fontSize: theme.typography.pxToRem(15),\n    color: theme.palette.text.secondary,\n    paddingLeft: 15,\n    paddingTop: 15,\n  },\n}))\n\n\nconst Chat = props => {\n  const classes = useStyles()\n\n  const { channels, people, messages, privateMessages } = props.data\n\n  // ID active channel\n  let activeChannel = channels.find(channel => {\n    return channel.url === props.match.params.channelName\n  })\n  if (activeChannel !== undefined) {\n    activeChannel = activeChannel.id\n  } else {\n    activeChannel = 1\n  }\n\n  // ID active private chat\n  let activePrivateChat = people.find(user => {\n    return user.userName === props.match.params.userName\n  })\n  if (activePrivateChat !== undefined) {\n    activePrivateChat = activePrivateChat.id\n  } else {\n    activePrivateChat = 0\n  }\n\n  const countMessage = messages.filter(message => message.channelId === activeChannel).length\n  const countPrivateMessage = privateMessages.filter(message => message.channelId === activePrivateChat).length\n\n  return (\n    <main className={classes.content}>\n      <div className={classes.contentBox}>\n        <div className={classes.contentBody}>\n          <Toolbar />\n          {\n            props.match.params.hasOwnProperty('userName')\n            ? <PrivateMessages\n                classes={classes}\n                countMessage={countPrivateMessage}\n                messages={privateMessages}\n                activePrivateChat={activePrivateChat}\n                people={people}\n              />\n            : <Messages\n                classes={classes}\n                countMessage={countMessage}\n                messages={messages}\n                activeChannel={activeChannel}\n                people={people}\n              />\n          }\n        </div>\n        <div className={classes.sendMessageBox}>\n          <TextField\n            className={classes.sendMessage}\n            fullWidth\n            id=\"outlined-search\"\n            label=\"Send message\"\n            type=\"input\"\n            variant=\"outlined\"\n            value={props.inputText}\n            onChange={props.inputTextChange}\n            onKeyPress={event => props.addMessage(activeChannel, activePrivateChat, event)}\n          />\n        </div>\n      </div>\n    </main>\n  )\n}\n\nexport default withRouter(Chat)","import React, {Component} from 'react'\nimport {Route} from 'react-router-dom'\n// import { makeStyles } from '@material-ui/core/styles'\nimport { withStyles } from '@material-ui/styles'\nimport deepPurple from '@material-ui/core/colors/deepPurple'\nimport Header from '../../components/Header/Header'\nimport LeftSidebar from '../../components/LeftSidebar/LeftSidebar'\nimport Chat from '../Chat/Chat'\n\n\nconst styles = () => ({\n  root: {\n    display: 'flex',\n    '& label.Mui-focused': {\n      color: deepPurple[700],\n    },\n    '& .MuiOutlinedInput-root': {\n      '&.Mui-focused fieldset': {\n        borderColor: deepPurple[700],\n      },\n      '&:hover fieldset': {\n        borderColor: deepPurple[700],\n      },\n    },\n  },\n})\n\n\nclass Messenger extends Component {\n\n  state = {\n    channels: [\n      {id: 1, name: 'Blood', url: 'blood'},\n      {id: 2, name: 'Transylvania', url: 'transylvania'},\n      {id: 3, name: 'Gothic horror', url: 'gothic-horror'},\n      {id: 4, name: 'Vampire literature', url: 'vampire-literature'},\n    ],\n    people: [\n      {id: 1, userName: 'frederick-aguirre', name: 'Frederick Aguirre', avatar: '/images/avatar/1.jpg', myProfile: false},\n      {id: 2, userName: 'lamar-boone', name: 'Lamar Boone', avatar: '/images/avatar/2.jpg', myProfile: false},\n      {id: 3, userName: 'emeli-ware', name: 'Emeli Ware', avatar: '/images/avatar/3.jpg', myProfile: false},\n      {id: 4, userName: 'anna-bloom', name: 'Anna Bloom', avatar: '/images/avatar/4.jpg', myProfile: false},\n      {id: 5, userName: 'mark-derrick', name: 'Mark Derrick', avatar: '/images/avatar/5.jpg', myProfile: false},\n      {id: 6, userName: 'sasha-zakharchuk', name: 'Sasha Zakharchuk', avatar: '/images/avatar/6.jpg', myProfile: true}\n    ],\n    messages: [\n      {\n        id: 1,\n        userId: 5,\n        channelId: 4,\n        message: \"I'll be in the neighbourhood this week. Let's grab a bite to eat\",\n      },\n      {\n        id: 2,\n        userId: 1,\n        channelId: 2,\n        message: `Do you have a suggestion for a good present for John on his work\n          anniversary. I am really confused & would love your thoughts on it.`,\n      },\n      {\n        id: 3,\n        userId: 2,\n        channelId: 1,\n        message: 'I am try out this new BBQ recipe, I think this might be amazing',\n      },\n      {\n        id: 4,\n        userId: 3,\n        channelId: 2,\n        message: 'I have the tickets to the ReactConf for this year.',\n      },\n      {\n        id: 5,\n        userId: 4,\n        channelId: 4,\n        message: 'My appointment for the doctor was rescheduled for next Saturday.',\n      },\n      {\n        id: 6,\n        userId: 5,\n        channelId: 2,\n        message: `Menus that are generated by the bottom app bar (such as a bottom\n          navigation drawer or overflow menu) open as bottom sheets at a higher elevation\n          than the bar.`,\n      },\n      {\n        id: 8,\n        userId: 4,\n        channelId: 1,\n        message: `Who wants to have a cookout this weekend? I just got some furniture\n          for my backyard and would love to fire up the grill.`,\n      },\n      {\n        id: 9,\n        userId: 1,\n        channelId: 1,\n        message: `What if I told you… you can break the rules?`,\n      },\n      {\n        id: 10,\n        userId: 5,\n        channelId: 1,\n        message: `Everybody says to “build things!” but what good is that when \n                  you’re not sure what the code is doing anyway?`,\n      },\n      {\n        id: 11,\n        userId: 3,\n        channelId: 1,\n        message: `You start to wish that NPM would disappear overnight.`,\n      },\n    ],\n    privateMessages: [\n      {\n        id: 1,\n        userId: 5,\n        channelId: 5,\n        message: \"Hi Sasha. How are you?\",\n      },\n      {\n        id: 2,\n        userId: 1,\n        channelId: 1,\n        message: `Do you remeber me?`,\n      },\n      {\n        id: 3,\n        userId: 6,\n        channelId: 1,\n        message: `Yes of course.`,\n      },\n      {\n        id: 4,\n        userId: 6,\n        channelId: 5,\n        message: `I'm fine.`,\n      },\n      {\n        id: 5,\n        userId: 6,\n        channelId: 4,\n        message: `Hey. How are you?`,\n      },\n      {\n        id: 6,\n        userId: 2,\n        channelId: 2,\n        message: `Hey.`,\n      },\n      {\n        id: 7,\n        userId: 6,\n        channelId: 2,\n        message: `Hey. How are you?`,\n      },\n      {\n        id: 8,\n        userId: 2,\n        channelId: 2,\n        message: `I'm pretty good. One second you’re nodding along, convinced that you understand.`,\n      },\n      {\n        id: 9,\n        userId: 6,\n        channelId: 2,\n        message: `The next, you’re staring at a blinking cursor wondering what to type.`,\n      },\n      {\n        id: 10,\n        userId: 2,\n        channelId: 2,\n        message: `You’ll be able to evaluate libraries on their merit and add them as needed.`,\n      },\n    ],\n    inputText: ''\n  }\n\n\n  addMessageHandler = (activeChannel, activePrivateChat, event) => {\n    if(event.key && event.key === 'Enter') {\n\n      let channel,chat\n      if (activePrivateChat) {\n        channel = activePrivateChat\n        chat = this.state.privateMessages\n      } else {\n        channel = activeChannel\n        chat = this.state.messages\n      }\n\n      const messages = [ ...chat ]\n      // console.log('Нажалось', event.target.value)\n      const message = {\n        id: chat.length + 2,\n        userId: 6,\n        channelId: channel,\n        message: event.target.value,\n      }\n\n      messages.push(message)\n\n      if (activePrivateChat) {\n        this.setState({\n          privateMessages: messages,\n          inputText: ''\n        })\n      } else {\n        this.setState({\n          messages,\n          inputText: ''\n        })\n      }\n    }\n  }\n\n  inputTextChangeHandler = inputText => {\n    if (inputText.trim() === '') {\n      return\n    }\n\n    this.setState({\n      inputText\n    })\n  }\n\n\n  render() {\n    const { classes } = this.props\n\n    // Потрібно для того, що передати в Route компонент з параметрами\n    const chatProps = () => {\n      return (\n        <Chat\n          data={this.state}\n          addMessage={this.addMessageHandler}\n        />\n      )\n    }\n\n    return (\n      <div className={classes.root}>\n        <Header\n          avatarName={this.state.people[5].name}\n          avatarUrl={this.state.people[5].avatar}\n        />\n        <LeftSidebar\n          channels={this.state.channels}\n          data={this.state}\n          inputText={this.state.inputText}\n          inputTextChange={event => this.inputTextChangeHandler(event.target.value)}\n        />\n\n        <Route path=\"/\" exact component={chatProps} />\n        <Route path=\"/channel/\" exact component={chatProps} />\n        <Route path=\"/channel/:channelName\" exact component={chatProps} />\n        <Route path=\"/user/\" exact component={chatProps} />\n        <Route path=\"/user/:userName\" exact component={chatProps} />\n        {/* <Chat\n          data={this.state}\n          addMessage={this.addMessageHandler}\n        /> */}\n      </div>\n    )\n  }\n}\n\nexport default withStyles(styles)(Messenger)","import React from 'react'\nimport './App.css'\nimport Messenger from './containers/Messenger/Messenger'\n\nfunction App() {\n  return (\n    <Messenger />\n  )\n}\n\nexport default App","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport {BrowserRouter} from 'react-router-dom'\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <BrowserRouter>\n      <App />\n    </BrowserRouter>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}